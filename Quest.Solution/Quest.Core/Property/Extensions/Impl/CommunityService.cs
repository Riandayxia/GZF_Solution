// <autogenerated>
//   This file was generated by T4 code generator EntityCodeScript.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

//------------------------------------------------------------------------------
// <copyright file="IComplaintsService.cs">
//        Copyright(c)2013 QuestCN.All rights reserved.
//        CLR版本：4.0.30319.239
//        开发组织：溯汇软件@中国
//        公司网站：http://www.cnsuhui.com
//        所属工程：Quest.Core
//        生成时间：2016-10-10 11:16
// </copyright>
//------------------------------------------------------------------------------



using System;
using System.ComponentModel.Composition;
using Quest.Core.Data;
using Quest.Core.Models.Property;
using Quest.Framework;
using System.Linq;
using System.Collections.Generic;
using Quest.Framework.EF;

namespace Quest.Core.Property.Impl
{
	/// <summary>
    /// 活动资讯 核心业务契约
    /// </summary>
    internal partial class CommunityService 
    {
        #region 公共属性

        #endregion

        #region 公共方法
        /// <summary>
        /// 插入 首页内容 记录
        /// </summary>
        /// <param name="entity">  首页内容 对象 </param>
        /// <param name="isSave"> 是否执行保存 </param>
        /// <returns> 操作影响的行数 </returns>
        public OperationResult Add(Community entity, Boolean isSave = true)
        {
            #region 参数验证
            try
            {
                PublicHelper.CheckArgument(entity, "entity");
            }
            catch (ComponentException e)
            {
                return new OperationResult(OperationResultType.ParamError, e.Message, false);
            }
            #endregion
            entity.ImageUrl = this.GetImgUrl(entity.Content);
            entity.Text = this.GetText(entity.Content);
            if (this.Insert(entity).ResultType != OperationResultType.Success)
            {
                return new OperationResult(OperationResultType.QueryNull, "添加失败", false);
            }
            else
            {
                return new OperationResult(OperationResultType.Success, "添加成功", true);
            }
        }
        #endregion

        #region 私有方法
        /// <summary>
        /// 得到内容里的图片路径
        /// </summary>
        /// <param name="Contents">内容字段</param>
        /// <returns>返回字段</returns>
        private String GetImgUrl(String Contents)
        {

            String arr = null; ;
            //循环数据
            for (int i = 0; i < Contents.Count(); i++)
            {
                //得到img的位置
                i = Contents.IndexOf("<img", i);

                if (i < 0) { break; }
                else
                {
                    int j = Contents.IndexOf(">", i);
                    if (i < j)
                    {
                        if (String.IsNullOrEmpty(arr))
                        {
                            //取到对应的字符串
                            arr = Contents.Substring(i, j - i + 1);
                        }
                        else
                        {
                            //加入到字段里面
                            arr = arr + "," + Contents.Substring(i, j - i + 1);
                        }
                    }
                }
            }
            return arr;
        }
        /// <summary>
        /// 得到内容里的图片路径
        /// </summary>
        /// <param name="Contents">内容字段</param>
        /// <returns>返回字段</returns>
        private String GetText(String Contents)
        {

            String arr = null; ;
            //循环数据
            for (int i = 0; i < Contents.Count(); i++)
            {
                //得到img的位置
                i = Contents.IndexOf(">", i);

                if (i < 0) { break; }
                else
                {
                    int j = Contents.IndexOf("<", i);
                    if (i < j)
                    {
                        if (String.IsNullOrEmpty(arr))
                        {
                            //取到对应的字符串
                            arr = Contents.Substring(i + 1, j - i - 1);
                        }
                        else
                        {
                            //加入到字段里面
                            arr = arr  + Contents.Substring(i + 1, j - i-1);
                        }
                    }
                }
            }
            return arr;
        }
        #endregion
    }
}
