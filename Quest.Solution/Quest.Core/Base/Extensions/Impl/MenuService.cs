// <autogenerated>
//   This file was generated by T4 code generator EntityCodeScript.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

//------------------------------------------------------------------------------
// <copyright file="IMenuService.cs">
//        Copyright(c)2013 QuestCN.All rights reserved.
//        CLR版本：4.0.30319.239
//        开发组织：溯汇软件@中国
//        公司网站：http://www.cnsuhui.com
//        所属工程：Quest.Core
//        生成时间：2016-08-18 09:39
// </copyright>
//------------------------------------------------------------------------------


using System;
using System.Linq;
using System.ComponentModel.Composition;
using Quest.Core.Data;
using Quest.Core.Models.Base;
using Quest.Framework;
using Quest.Framework.MVC;
using System.Collections.Generic;
using Quest.Framework.ExtJs;

namespace Quest.Core.Base.Impl
{
    /// <summary>
    /// 菜单 核心业务契约
    /// </summary>
    internal partial class MenuService
    {
        #region 公共属性

        #endregion

        #region 公共方法

        public OperationResult GetByParentName(String parentName = "root", MenuType mType = MenuType.Menu, MenuUse menuUse = MenuUse.PC)
        {
            OperationResult or = new OperationResult(OperationResultType.Error);
            Int32 use = menuUse.GetInt32(), mt = mType.GetInt32();
            IQueryable<Menu> menus = this.Entities.Where(c => c.Use == use && c.MType == mt);
            List<ExtTreeData<Menu, String>> items = menus.Where(p => p.ParentName == parentName).GroupJoin(
                          menus, c => c.ControllerName, p => p.ParentName,
                          (c, p) => new ExtTreeData<Menu, String>() { id = c.ControllerName, text = c.Name, Tobject = c, expanded = false, leaf = !(p.Count() > 0) }
                          ).OrderBy(c => c.Tobject.Id).ToList();
            or = new OperationResult(OperationResultType.Success, "", items);
            return or;
        }

        public OperationResult GetByRoot(MenuType mType = MenuType.Menu, MenuUse menuUse = MenuUse.PC)
        {
            String parentName = "root";
            OperationResult or = new OperationResult(OperationResultType.Error);
            Int32 use = menuUse.GetInt32(), mt = mType.GetInt32();
            List<ExtTreeData<Menu, String>> items = this.Entities.Where(c => c.Use == use && c.MType == mt && c.ParentName == parentName).Select(c => new ExtTreeData<Menu, String>() { id = c.ControllerName, text = c.Name, Tobject = c, expanded = false, leaf = true }).ToList();

            or = new OperationResult(OperationResultType.Success, "", items);
            return or;
        }

        #endregion

        #region 私有方法

        #endregion
    }
}
